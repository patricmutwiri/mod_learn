<?php
//template was generated by Alchemist - Joomla! module generator, http://alchemist-rad.ru/

/**
 * Install/uninstall hook class for module mod_learn
 * @package mod_learn
 * @version 1.0
 * @author Patrick, <dev@patric.xyz>
 * @link http://patric.xyz
 * @license GNU GPL
 */
defined('_JEXEC') or die;
class mod_learnInstallerScript
{

	/**
	 * Runs before anything else and while the extracted files are in the uploaded temp folder.
	 * If preflight returns false, Joomla will abort the update and undo everything already done.
	 * @param string $type Action type, "install", "update" or "discover_install"
	 * @param object $parent The class calling this method
	 * @return boolean
	 */
	public function preflight($type, $parent)
	{
		
	}

	/**
	 * Runs after the database scripts are executed.
	 * If the extension is new, the install method is run.
	 * If install returns false, Joomla will abort the install and undo everything already done.
	 * @param object $parent The class calling this method
	 * @return boolean
	 */
	public function install($parent)
	{
		
	}

	/**
	 * Runs after the database scripts are executed.
	 * If the extension exists, then the update method is run.
	 * If this returns false, Joomla will abort the update and undo everything already done.
	 * @param object $parent The class calling this method
	 * @return boolean
	 */
	public function update($parent)
	{
		
	}

	/**
	 * Runs after the extension is registered in the database.
	 * @param string $type Action type, "install", "update" or "discover_install"
	 * @param object $parent The class calling this method
	 */
	public function postflight($type, $parent)
	{
		
	}

	/**
	 * Runs before any other action is taken (file removal or database processing).
	 * @param object $parent The class calling this method
	 */
	public function uninstall($parent)
	{
		
	}
}
